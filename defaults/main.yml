# SPDX-FileCopyrightText: 2025 Pavel Dimov <@sagat79>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/timothystewart6/littlelink-server

littlelink_server_enabled: true

littlelink_server_identifier: littlelink_server
littlelink_server_base_path: "/{{ littlelink_server_identifier }}"
littlelink_server_data_path: "{{ littlelink_server_base_path }}/data"

# Note: Change "littlelink_server_container_image_self_build_dockerfile" when updating
# renovate: datasource=docker depName=littlelink-server versioning=latest
littlelink_server_version: latest

littlelink_server_uid: ''
littlelink_server_gid: ''

# The hostname at which LittleLink Server is served.
littlelink_server_hostname: ''

littlelink_server_path_prefix: /

littlelink_server_container_image: "{{ littlelink_server_container_image_registry_prefix }}littlelink-server:{{ littlelink_server_container_image_tag }}"
littlelink_server_container_image_tag: "{{ littlelink_server_version }}"
littlelink_server_container_image_registry_prefix: "{{ littlelink_server_container_image_registry_prefix_upstream }}"
littlelink_server_container_image_registry_prefix_upstream: "{{ littlelink_server_container_image_registry_prefix_upstream_default }}"
littlelink_server_container_image_registry_prefix_upstream_default: ghcr.io/timothystewart6/
littlelink_server_container_image_force_pull: "{{ littlelink_server_container_image.endswith(':latest') }}"

littlelink_server_container_image_self_build: false
littlelink_server_container_image_self_build_name: "timothystewart6/littlelink-server:{{ littlelink_server_container_image_self_build_repo_version }}"
littlelink_server_container_image_self_build_repo: "https://github.com/timothystewart6/littlelink-server.git"
littlelink_server_container_image_self_build_repo_version: "main"
littlelink_server_container_image_self_build_dockerfile: "Dockerfile"
littlelink_server_container_image_self_build_src_files_path: "{{ littlelink_server_base_path }}/docker-src"

# Controls whether the LittleLink Server container exposes its HTTP port (as defined by `littlelink_server_container_http_port`).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:3000"), or empty string to not expose.
littlelink_server_container_http_host_bind_port: ""

# The base container network. It will be auto-created by this role if it doesn't exist already.
littlelink_server_container_network: '{{ littlelink_server_identifier }}'

# The port number in the container
littlelink_server_container_http_port: 3000

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to a reverse proxy, which runs in a different container network.
littlelink_server_container_additional_networks: "{{ littlelink_server_container_additional_networks_auto + littlelink_server_container_additional_networks_custom }}"
littlelink_server_container_additional_networks_auto: []
littlelink_server_container_additional_networks_custom: []

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}`.
# See the `--mount` documentation for the `docker run` command.
littlelink_server_container_additional_volumes: "{{ littlelink_server_container_additional_volumes_auto + littlelink_server_container_additional_volumes_custom }}"
littlelink_server_container_additional_volumes_auto: []
littlelink_server_container_additional_volumes_custom: []

# littlelink_server_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `littlelink_server_container_labels_additional_labels`.
littlelink_server_container_labels_traefik_enabled: true
littlelink_server_container_labels_traefik_docker_network: "{{ littlelink_server_container_network }}"
littlelink_server_container_labels_traefik_hostname: "{{ littlelink_server_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/littlelink`).
littlelink_server_container_labels_traefik_path_prefix: "{{ littlelink_server_path_prefix }}"
littlelink_server_container_labels_traefik_rule: "Host(`{{ littlelink_server_container_labels_traefik_hostname }}`){% if littlelink_server_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ littlelink_server_container_labels_traefik_path_prefix }}`){% endif %}"
littlelink_server_container_labels_traefik_priority: 0
littlelink_server_container_labels_traefik_entrypoints: web-secure
littlelink_server_container_labels_traefik_tls: "{{ littlelink_server_container_labels_traefik_entrypoints != 'web' }}"
littlelink_server_container_labels_traefik_tls_certResolver: default  # noqa var-naming
littlelink_server_container_labels_middleware_basic_auth_enabled: false
# Use `htpasswd -nb USERNAME PASSWORD` to generate the users below.
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/#users
littlelink_server_container_labels_middleware_basic_auth_users: ''

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `littlelink_server_container_labels_traefik_additional_request_headers_custom`
littlelink_server_container_labels_traefik_additional_request_headers: "{{ littlelink_server_container_labels_traefik_additional_request_headers_auto | combine(littlelink_server_container_labels_traefik_additional_request_headers_custom) }}"
littlelink_server_container_labels_traefik_additional_request_headers_auto: {}
littlelink_server_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `littlelink_server_container_labels_traefik_additional_response_headers_custom`
littlelink_server_container_labels_traefik_additional_response_headers: "{{ littlelink_server_container_labels_traefik_additional_response_headers_auto | combine(littlelink_server_container_labels_traefik_additional_response_headers_custom) }}"
littlelink_server_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': littlelink_server_http_header_xss_protection} if littlelink_server_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': littlelink_server_http_header_content_type_options} if littlelink_server_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': littlelink_server_http_header_content_security_policy} if littlelink_server_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': littlelink_server_http_header_content_permission_policy} if littlelink_server_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': littlelink_server_http_header_strict_transport_security} if littlelink_server_http_header_strict_transport_security and littlelink_server_container_labels_traefik_tls else {})
  }}
littlelink_server_container_labels_traefik_additional_response_headers_custom: {}

# littlelink_server_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# littlelink_server_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
littlelink_server_container_labels_additional_labels: ''

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
littlelink_server_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
littlelink_server_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
littlelink_server_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
littlelink_server_http_header_content_permission_policy: "{{ 'interest-cohort=()' if littlelink_server_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
littlelink_server_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if littlelink_server_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `littlelink_server_content_permission_policy`
littlelink_server_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport_Security
# - https://hstspreload.org/#opt-in
# See: `littlelink_server_http_header_strict_transport_security`
littlelink_server_hsts_preload_enabled: false

# List of systemd services that the LittleLink Server systemd service depends on
littlelink_server_systemd_required_services_list: "{{ littlelink_server_systemd_required_services_list_default + littlelink_server_systemd_required_services_list_auto + littlelink_server_systemd_required_services_list_custom }}"
littlelink_server_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
littlelink_server_systemd_required_services_list_auto: []
littlelink_server_systemd_required_services_list_custom: []

# List of systemd services that the LittleLink Server systemd service wants
littlelink_server_systemd_wanted_services_list: "{{ littlelink_server_systemd_wanted_services_list_default + littlelink_server_systemd_wanted_services_list_auto + littlelink_server_systemd_wanted_services_list_custom }}"
littlelink_server_systemd_wanted_services_list_default: []
littlelink_server_systemd_wanted_services_list_auto: []
littlelink_server_systemd_wanted_services_list_custom: []

# LittleLink Server environment variables
littlelink_server_url: "{{ 'https://' + littlelink_server_hostname if littlelink_server_hostname else '' }}"
littlelink_server_node_env: production

# Additional environment variables to pass to the LittleLink Server container.
# You can use this to further influence the default configuration.
littlelink_server_environment_variables_additional_variables: ''

# LittleLink Server specific configuration
littlelink_server_meta_title: "LittleLink Server"
littlelink_server_meta_description: "A lightweight DIY alternative to services like Linktree"
littlelink_server_meta_author: "LittleLink Server"
littlelink_server_meta_keywords: "links, social, profile, bio"
littlelink_server_lang: "en"
littlelink_server_meta_index_status: "all"
littlelink_server_og_site_name: "LittleLink Server"
littlelink_server_og_title: "LittleLink Server"
littlelink_server_og_description: "A lightweight DIY alternative to services like Linktree"
littlelink_server_og_url: ""
littlelink_server_og_image: ""
littlelink_server_og_image_width: "400"
littlelink_server_og_image_height: "400"
littlelink_server_ga_tracking_id: ""
littlelink_server_theme: "Dark"
littlelink_server_favicon_url: ""
littlelink_server_avatar_url: ""
littlelink_server_avatar_2x_url: ""
littlelink_server_avatar_alt: "Profile Picture"
littlelink_server_name: "LittleLink Server"
littlelink_server_bio: "A lightweight DIY alternative to services like Linktree"
littlelink_server_footer: "LittleLink Server © 2025"

# Social media links
littlelink_server_github: ""
littlelink_server_twitter: ""
littlelink_server_instagram: ""
littlelink_server_linked_in: ""
littlelink_server_youtube: ""
littlelink_server_twitch: ""
littlelink_server_discord: ""
littlelink_server_tiktok: ""
littlelink_server_facebook: ""
littlelink_server_patreon: ""
littlelink_server_facebook_messenger: ""
littlelink_server_product_hunt: ""
littlelink_server_snapchat: ""
littlelink_server_spotify: ""
littlelink_server_reddit: ""
littlelink_server_medium: ""
littlelink_server_pinterest: ""
littlelink_server_email: ""
littlelink_server_email_text: "Email Me!"
littlelink_server_email_alt: ""
littlelink_server_email_alt_text: "Email me!"
littlelink_server_sound_cloud: ""
littlelink_server_figma: ""
littlelink_server_telegram: ""
littlelink_server_tumblr: ""
littlelink_server_steam: ""
littlelink_server_vimeo: ""
littlelink_server_wordpress: ""
littlelink_server_goodreads: ""
littlelink_server_skoob: ""
littlelink_server_letterboxd: ""
littlelink_server_mastodon: ""
littlelink_server_micro_blog: ""
littlelink_server_whatsapp: ""
littlelink_server_strava: ""
littlelink_server_bluesky: ""
littlelink_server_buymeacoffee: ""
littlelink_server_gitlab: ""
littlelink_server_devto: ""
littlelink_server_paypal: ""
littlelink_server_slack: ""
littlelink_server_stackoverflow: ""
littlelink_server_lastfm: ""
littlelink_server_gitea: ""
littlelink_server_polywork: ""
littlelink_server_signal: ""
littlelink_server_untappd: ""
littlelink_server_instantgaming: ""
littlelink_server_ghost: ""
littlelink_server_trakt: ""
littlelink_server_cashapp: ""
littlelink_server_teespring: ""
littlelink_server_xing: ""
littlelink_server_keybase: ""
littlelink_server_onlyfans: ""
littlelink_server_session: ""
littlelink_server_threema: ""
littlelink_server_streamlabs: ""
littlelink_server_privatebin: ""
littlelink_server_amazon_affiliate: ""
littlelink_server_amazon_wishlist: ""
littlelink_server_apple_music: ""
littlelink_server_youtube_music: ""
littlelink_server_venmo: ""
littlelink_server_status: ""
littlelink_server_matrix: ""
littlelink_server_anilist: ""
littlelink_server_kit: ""

# Button configuration
littlelink_server_button_order: ""
littlelink_server_button_target: "_blank"

# Custom buttons
littlelink_server_custom_button_text: ""
littlelink_server_custom_button_url: ""
littlelink_server_custom_button_color: ""
littlelink_server_custom_button_text_color: ""
littlelink_server_custom_button_alt_text: ""
littlelink_server_custom_button_name: ""
littlelink_server_custom_button_icon: ""

# Analytics
littlelink_server_umami_website_id: ""
littlelink_server_umami_app_url: ""
littlelink_server_umami_script_name: "script.js"
